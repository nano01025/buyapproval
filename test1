<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>買い物承認システム</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f9f9f9;
        }

        h2 {
            color: #333;
            text-align: center;
        }

        ul {
            list-style-type: none;
            padding: 0;
            margin: 0;
            max-width: 600px;
            margin: 0 auto;
        }

        li {
            margin-bottom: 10px;
        }

        input[type="text"], select {
            width: calc(100% - 22px);
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        input[type="button"], button {
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            color: white;
            font-weight: bold;
            margin-right: 5px;
        }

        input[type="button"]:hover, button:hover {
            opacity: 0.8;
        }

        .button-register {
            background-color: #007bff; /* 登録ボタンの色 */
        }

        .button-approve {
            background-color: #007bff; /* 承認ボタンの色 */
        }

        .button-disapprove {
            background-color: #dc3545; /* 非承認ボタンの色 */
        }

        .button-update-status {
            background-color: #28a745; /* ステータス変更ボタンの色 */
        }

        .button-delete {
            background-color: #dc3545; /* 削除ボタンの色 */
        }

        #approval-section {
            margin-top: 20px;
        }

        .product-item {
            background-color: #fff;
            border: 1px solid #ddd;
            border-radius: 4px;
            padding: 15px;
            margin-bottom: 20px;
            position: relative;
        }

        .product-item a {
            color: #007bff;
            text-decoration: none;
        }

        .product-item a:hover {
            text-decoration: underline;
        }

        .status {
            position: absolute;
            top: 15px;
            right: 15px;
            padding: 5px 10px;
            border-radius: 4px;
            color: white;
            font-weight: bold;
        }

        .status.pending {
            background-color: #ffc107;
        }

        .status.approved {
            background-color: #28a745;
        }

        .status.purchased {
            background-color: #007bff;
        }

        .status.rejected {
            background-color: #dc3545;
        }

        #status-controls {
            margin-top: 20px;
            max-width: 600px;
            margin: 0 auto;
        }

        #rejection-reason {
            display: none;
        }

        .approval-buttons {
            margin-top: 10px;
        }

        #password-section {
            display: none;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <h2>買い物承認システム</h2>
    <ul>
        <li>入力者名前：
            <select id="name">
                <option value="茂樹">茂樹</option>
                <option value="彩子">彩子</option>
                <option value="啓吾">啓吾</option>
                <option value="淳史">淳史</option>
            </select>
        </li>
        <li>商品名：<input type="text" placeholder="商品名" id="product"></li>
        <li>値段：<input type="text" placeholder="値段" id="price" oninput="formatPrice()"></li>
        <li>URL：<input type="text" placeholder="URL" id="url"></li>
        <li>購入店舗名（任意）：<input type="text" placeholder="店舗名" id="storename"></li>
        <li>なぜ必要なのか・意見主張欄：<input type="text" placeholder="意見" id="opinion"></li>
    </ul>
    <input type="button" value="登録" class="button-register" onclick="submit()">

    <div id="approval-section">
        <h3>承認者の承認状況</h3>
        <div id="product-list"></div>
    </div>
    
    <div id="status-controls">
        <h3>ステータス変更</h3>
        <label for="product-select">商品番号:</label>
        <select id="product-select"></select>
        <label for="status-select">ステータス:</label>
        <select id="status-select" onchange="toggleRejectionReason()">
            <option value="pending">審議中</option>
            <option value="approved">購入決定</option>
            <option value="purchased">購入済み</option>
            <option value="rejected">却下</option>
        </select>
        <div id="rejection-reason">
            <label for="rejection-reason-input">却下理由:</label>
            <input type="text" id="rejection-reason-input" placeholder="却下理由">
        </div>
        <div id="password-section">
            <label for="password-input">パスワード:</label>
            <input type="password" id="password-input" placeholder="パスワード">
            <input type="button" value="ステータス変更" class="button-update-status" onclick="updateStatus()">
            <input type="button" value="削除" class="button-delete" onclick="deleteProduct()">
        </div>
    </div>

    <script>
        const PASSWORD = 'nano0102'; // このパスワードは例として使っています。適切な方法でパスワードを管理してください。
        let products = [];
        let productId = 0;

        function submit() {
            let name = document.getElementById("name").value;
            let product = document.getElementById("product").value;
            let price = Number(document.getElementById("price").value.replace(/,/g, ''));
            let url = document.getElementById("url").value;
            let storename = document.getElementById("storename").value;
            let opinion = document.getElementById("opinion").value;

            productId++;
            let newProduct = {
                id: productId,
                name: name,
                product: product,
                price: price,
                url: url,
                storename: storename,
                opinion: opinion,
                approvals: [false, false, false, false],
                status: 'pending',
                rejectionReason: ''
            };
            products.push(newProduct);

            localStorage.setItem('products', JSON.stringify(products));
            localStorage.setItem('productId', productId);

            renderProductList();
            updateProductSelect();
            clearInputs();
        }

        function clearInputs() {
            document.getElementById("name").value = "茂樹";
            document.getElementById("product").value = "";
            document.getElementById("price").value = "";
            document.getElementById("url").value = "";
            document.getElementById("storename").value = "";
            document.getElementById("opinion").value = "";
        }

        function formatPrice() {
            let priceInput = document.getElementById("price");
            let price = priceInput.value.replace(/,/g, '');
            if (!isNaN(price) && price !== '') {
                priceInput.value = Number(price).toLocaleString();
            }
        }

        function renderProductList() {
            let productList = document.getElementById("product-list");
            productList.innerHTML = "";

            products.forEach(product => {
                let approvedCount = product.approvals.filter(status => status).length;

                let statusClass = '';
                if (product.status === 'approved') {
                    statusClass = 'approved';
                } else if (product.status === 'purchased') {
                    statusClass = 'purchased';
                } else if (product.status === 'rejected') {
                    statusClass = 'rejected';
                } else {
                    statusClass = 'pending';
                }

                let productItem = `
                    <div class="product-item">
                        <div class="status ${statusClass}">${getStatusText(product.status)}</div>
                        <strong>商品番号:</strong> ${product.id}<br>
                        <strong>入力者名前:</strong> ${product.name}<br>
                        <strong>商品名:</strong> ${product.product}<br>
                        <strong>値段:</strong> ${formatPriceValue(product.price)}円<br>
                        <strong>URL:</strong> <a href="${product.url}" target="_blank">${product.url}</a><br>
                        <strong>購入店舗名:</strong> ${product.storename}<br>
                        <strong>意見:</strong> ${product.opinion}<br>
                        <strong>承認:</strong> ${approvedCount} / 4<br>
                        ${product.status === 'rejected' ? `<strong>却下理由:</strong> ${product.rejectionReason}<br>` : ''}
                        <div class="approval-buttons">
                            <button onclick="approve(${product.id}, 0)" class="button-approve">承認 (茂樹)</button>
                            <button onclick="disapprove(${product.id}, 0)" class="button-disapprove">非承認 (茂樹)</button><br>
                            <button onclick="approve(${product.id}, 1)" class="button-approve">承認 (彩子)</button>
                            <button onclick="disapprove(${product.id}, 1)" class="button-disapprove">非承認 (彩子)</button><br>
                            <button onclick="approve(${product.id}, 2)" class="button-approve">承認 (啓吾)</button>
                            <button onclick="disapprove(${product.id}, 2)" class="button-disapprove">非承認 (啓吾)</button><br>
                            <button onclick="approve(${product.id}, 3)" class="button-approve">承認 (淳史)</button>
                            <button onclick="disapprove(${product.id}, 3)" class="button-disapprove">非承認 (淳史)</button><br>
                        </div>
                    </div>
                `;
                productList.innerHTML += productItem;
            });
        }

        function updateProductSelect() {
            let productSelect = document.getElementById("product-select");
            productSelect.innerHTML = "";
            products.forEach(product => {
                let option = document.createElement("option");
                option.value = product.id;
                option.textContent = `商品番号: ${product.id}`;
                productSelect.appendChild(option);
            });
        }

        function updateStatus() {
            let passwordInput = document.getElementById("password-input").value;
            if (passwordInput !== PASSWORD) {
                alert('パスワードが間違っています。');
                return;
            }

            let selectedProductId = parseInt(document.getElementById("product-select").value);
            let newStatus = document.getElementById("status-select").value;
            let rejectionReason = document.getElementById("rejection-reason-input").value;
            let product = products.find(p => p.id === selectedProductId);
            
            if (product) {
                product.status = newStatus;
                product.rejectionReason = rejectionReason;
                localStorage.setItem('products', JSON.stringify(products));
                renderProductList();
            }
        }

        function deleteProduct() {
            let passwordInput = document.getElementById("password-input").value;
            if (passwordInput !== PASSWORD) {
                alert('パスワードが間違っています。');
                return;
            }

            let selectedProductId = parseInt(document.getElementById("product-select").value);
            products = products.filter(p => p.id !== selectedProductId);
            localStorage.setItem('products', JSON.stringify(products));
            renderProductList();
            updateProductSelect();
        }

        function getStatusText(status) {
            switch (status) {
                case 'pending': return '審議中';
                case 'approved': return '購入決定';
                case 'purchased': return '購入済み';
                case 'rejected': return '却下';
                default: return '';
            }
        }

        function formatPriceValue(price) {
            return price.toLocaleString();
        }

        function toggleRejectionReason() {
            let statusSelect = document.getElementById("status-select");
            let rejectionReasonDiv = document.getElementById("rejection-reason");
            if (statusSelect.value === 'rejected') {
                rejectionReasonDiv.style.display = 'block';
            } else {
                rejectionReasonDiv.style.display = 'none';
            }
        }

        function approve(productId, index) {
            let product = products.find(p => p.id === productId);
            if (product) {
                product.approvals[index] = true;
                localStorage.setItem('products', JSON.stringify(products));
                renderProductList();
            }
        }

        function disapprove(productId, index) {
            let product = products.find(p => p.id === productId);
            if (product) {
                product.approvals[index] = false;
                localStorage.setItem('products', JSON.stringify(products));
                renderProductList();
            }
        }

        window.onload = function() {
            let storedProducts = localStorage.getItem('products');
            if (storedProducts) {
                products = JSON.parse(storedProducts);
            }

            let storedProductId = localStorage.getItem('productId');
            if (storedProductId) {
                productId = parseInt(storedProductId);
            }

            renderProductList();
            updateProductSelect();
            document.getElementById("password-section").style.display = 'block';
        }
    </script>
</body>
</html>
